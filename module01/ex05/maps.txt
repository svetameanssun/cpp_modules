~Когда std::reference_wrapper может быть предпочтительнее T* в map:~

 - Когда ты четко хочешь выразить семантику "ссылки":
ты не копируешь объект и не владеешь им, но хочешь иметь прямой доступ к нему.
 - Когда ты абсолютно уверена, что объекты, на которые ссылаешься,
будут существовать дольше, чем map.
 - Когда ты хочешь избежать проверок на nullptr и связанных с ними ошибок,
   поскольку std::reference_wrapper не может быть "пустой".
 - Когда тебе нужно использовать эти "ссылки" в других функциях или алгоритмах
   стандартной библиотеки, которые требуют копируемых типов,
   но ты хочешь передавать именно ссылку.

~Когда T* (или умные указатели) предпочтительнее:~

- Когда объекты могут динамически создаваться или удаляться, и ты хочешь
  управлять их жизненным циклом (тогда std::unique_ptr или std::shared_ptr — лучший выбор).
- Когда объект может не существовать (т.е. ты можешь захотеть хранить nullptr).
- Когда тебе нужна арифметика указателей (хотя это редкость для значений в map).